echo "Please Enter the master node IP Address:"
read masterip
echo "Please Enter the node1 IP address:"
read node1ip
echo "Please Enter the node2 IP address:"
read node2ip

echo "$masterip   master   master.demo.lab" | sudo tee -a /etc/hosts
echo "$node1ip   node1   node1.demo.lab" | sudo tee -a /etc/hosts
echo "$node2ip   node2   node2.demo.lab" | sudo tee -a /etc/hosts

sudo swapoff -a
sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab


sudo touch /etc/modules-load.d/containerd.conf 
echo overlay | sudo tee -a /etc/modules-load.d/containerd.conf
echo br_netfilter | sudo tee -a /etc/modules-load.d/containerd.conf

sudo modprobe overlay
sudo modprobe br_netfilter

sudo touch /etc/sysctl.d/kubernetes.conf 
echo "net.bridge.bridge-nf-call-ip6tables = 1" | sudo tee -a /etc/sysctl.d/kubernetes.conf
echo "net.bridge.bridge-nf-call-iptables = 1" | sudo tee -a /etc/sysctl.d/kubernetes.conf
echo "net.ipv4.ip_forward = 1" | sudo tee -a /etc/sysctl.d/kubernetes.conf


sudo apt install -y curl gnupg2 software-properties-common apt-transport-https ca-certificates

sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmour -o /etc/apt/trusted.gpg.d/docker.gpg

sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"

sudo apt update
sudo apt install -y containerd.io

sudo systemctl restart containerd
sudo systemctl enable containerd

curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo gpg --dearmour -o /etc/apt/trusted.gpg.d/kubernetes-xenial.gpg
sudo apt-add-repository "deb http://apt.kubernetes.io/ kubernetes-xenial main"

sudo apt update
sudo apt install -y kubelet kubeadm kubectl
sudo apt-mark hold kubelet kubeadm kubectl
echo "systemdCgroup = true" | sudo tee -a /etc/containerd/config.toml 
sudo systemctl restart containerd
sudo kubeadm init --control-plane-endpoint=master.demo.lab

echo "#############"
echo "Please copy above kubeadm join toke and paste it in a file!!!"
echo "#############"
read ans

mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf HOME/.kube/config
sudo chown $(id -u):$(id -g) HOME/.kube/config


kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/v3.25.0/manifests/calico.yaml



